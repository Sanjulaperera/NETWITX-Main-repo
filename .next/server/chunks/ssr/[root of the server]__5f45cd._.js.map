{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanjula/Documents/NETWITX-Main-repo/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanjula/Documents/NETWITX-Main-repo/components/ui/grid-pattern.tsx"],"sourcesContent":["import { useId } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface GridPatternProps {\n  width?: number;\n  height?: number;\n  x?: number;\n  y?: number;\n  squares?: Array<[x: number, y: number]>;\n  strokeDasharray?: string;\n  className?: string;\n  [key: string]: unknown;\n}\n\nexport function GridPattern({\n  width = 40,\n  height = 40,\n  x = -1,\n  y = -1,\n  strokeDasharray = \"0\",\n  squares,\n  className,\n  ...props\n}: GridPatternProps) {\n  const id = useId();\n\n  return (\n    <svg\n      aria-hidden=\"true\"\n      className={cn(\n        \"pointer-events-none absolute inset-0 h-full w-full fill-gray-400/30 stroke-gray-400/30\",\n        className,\n      )}\n      {...props}\n    >\n      <defs>\n        <pattern\n          id={id}\n          width={width}\n          height={height}\n          patternUnits=\"userSpaceOnUse\"\n          x={x}\n          y={y}\n        >\n          <path\n            d={`M.5 ${height}V.5H${width}`}\n            fill=\"none\"\n            strokeDasharray={strokeDasharray}\n          />\n        </pattern>\n      </defs>\n      <rect width=\"100%\" height=\"100%\" strokeWidth={0} fill={`url(#${id})`} />\n      {squares && (\n        <svg x={x} y={y} className=\"overflow-visible\">\n          {squares.map(([x, y]) => (\n            <rect\n              strokeWidth=\"0\"\n              key={`${x}-${y}`}\n              width={width - 1}\n              height={height - 1}\n              x={x * width + 1}\n              y={y * height + 1}\n            />\n          ))}\n        </svg>\n      )}\n    </svg>\n  );\n}\n\nexport default GridPattern;\n"],"names":[],"mappings":";;;;;AAAA;AAEA;;;;AAaO,SAAS,YAAY,EAC1B,QAAQ,EAAE,EACV,SAAS,EAAE,EACX,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,kBAAkB,GAAG,EACrB,OAAO,EACP,SAAS,EACT,GAAG,OACc;IACjB,MAAM,KAAK,CAAA,GAAA,qMAAA,CAAA,QAAK,AAAD;IAEf,qBACE,8OAAC;QACC,eAAY;QACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0FACA;QAED,GAAG,KAAK;;0BAET,8OAAC;0BACC,cAAA,8OAAC;oBACC,IAAI;oBACJ,OAAO;oBACP,QAAQ;oBACR,cAAa;oBACb,GAAG;oBACH,GAAG;8BAEH,cAAA,8OAAC;wBACC,GAAG,CAAC,IAAI,EAAE,OAAO,IAAI,EAAE,OAAO;wBAC9B,MAAK;wBACL,iBAAiB;;;;;;;;;;;;;;;;0BAIvB,8OAAC;gBAAK,OAAM;gBAAO,QAAO;gBAAO,aAAa;gBAAG,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;;;;;YACnE,yBACC,8OAAC;gBAAI,GAAG;gBAAG,GAAG;gBAAG,WAAU;0BACxB,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,iBAClB,8OAAC;wBACC,aAAY;wBAEZ,OAAO,QAAQ;wBACf,QAAQ,SAAS;wBACjB,GAAG,IAAI,QAAQ;wBACf,GAAG,IAAI,SAAS;uBAJX,GAAG,EAAE,CAAC,EAAE,GAAG;;;;;;;;;;;;;;;;AAW9B;uCAEe"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanjula/Documents/NETWITX-Main-repo/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sMAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanjula/Documents/NETWITX-Main-repo/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sMAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/sanjula/Documents/NETWITX-Main-repo/app/%28auth%29/forgetPassword/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport GridPattern from \"@/components/ui/grid-pattern\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { sendPasswordResetEmail, fetchSignInMethodsForEmail, getAuth } from \"firebase/auth\";\nimport { Toaster, toast } from \"sonner\";\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState(\"\");\n  const router = useRouter();\n\n  const handleForgotPassword = async () => {\n    const trimmedEmail = email.trim(); // Ensure no leading/trailing spaces\n    if (!trimmedEmail) {\n      toast.error(\"Please enter your email.\");\n      return;\n    }\n\n    const auth = getAuth(); // Use `getAuth()` instead of the direct auth import if required\n\n    try {\n      // Check if email is registered\n      const methods = await fetchSignInMethodsForEmail(auth, trimmedEmail);\n      if (methods.length > 0) {\n        // Email is registered; send the reset email\n        await sendPasswordResetEmail(auth, trimmedEmail);\n        toast.success(`Password reset email sent to ${trimmedEmail}`);\n        // Redirect to login page after 2 seconds\n        setTimeout(() => {\n          router.push(\"/login\");\n        }, 2000);\n      } else {\n        // Email not registered\n        toast.error(\"This email is not registered with our system.\");\n      }\n    } catch (error: any) {\n      console.error(\"Error sending password reset email:\", error);\n      if (error.code === \"auth/invalid-email\") {\n        toast.error(\"Invalid email address.\");\n      } else if (error.code === \"auth/user-not-found\") {\n        toast.error(\"No user found with this email.\");\n      } else {\n        toast.error(\"Something went wrong. Please try again.\");\n      }\n    }\n  };\n\n  const goBack = () => {\n    router.back();\n  };\n\n  return (\n    <>\n      <Toaster richColors position=\"top-center\" />\n      <div className=\"relative h-[40rem] pt-32\">\n        <div className=\"text-center mt-10\">\n          <h1 className=\"text-3xl font-bold\">Forgot Password</h1>\n          <p className=\"text-base mt-1\">\n            A link will be sent to your email to reset the password\n          </p>\n          <div className=\"grid items-center justify-center mt-10 z-10\">\n            <div className=\"grid gap-2\">\n              <div className=\"grid gap-10\">\n                <Input\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Enter your email\"\n                  className=\"bg-white\"\n                />\n              </div>\n              <div className=\"flex gap-5\">\n                <Button onClick={handleForgotPassword}>\n                  Send Password Reset Email\n                </Button>\n                <Button onClick={goBack} variant=\"secondary\">\n                  Go Back\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <GridPattern\n          squares={[\n            [4, 4],\n            [5, 1],\n            [8, 2],\n            [5, 3],\n            [5, 5],\n            [10, 10],\n            [12, 15],\n            [17, 10],\n            [10, 15],\n            [12, 11],\n            [7, 9],\n            [18, 13],\n          ]}\n          className={cn(\n            \"[mask-image:radial-gradient(400px_circle_at_center,white,transparent)]\",\n            \"inset-x-0 inset-y-[-20%] h-[60rem] skew-y-12\"\n          )}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ForgotPassword;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}